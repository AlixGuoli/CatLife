plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
}

android {
    namespace 'com.runrick.vplifecat'
    compileSdk 35

    defaultConfig {
        applicationId "com.runrick.vplifecat"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig = true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        jniLibs {
            useLegacyPackaging = true
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    splits {
        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "arm64-v8a", "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk = true
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation files('libs/libv2ray.aar')

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.activity
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    implementation "com.elvishew:xlog:1.9.0"
    implementation "com.blankj:utilcodex:1.31.1"
    implementation 'com.airbnb.android:lottie:6.6.4'
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    implementation 'com.github.getActivity:MultiLanguages:8.0'
    implementation "com.github.getActivity:XXPermissions:18.3"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.10'

    implementation 'com.tencent:mmkv:1.3.1'
    implementation 'me.drakeet.support:toastcompat:1.1.0'

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    // 日志的拦截器
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
//    // Retrofit库
//    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    // gson解析，可以自行替换
//    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
//    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    //Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.github.li-xiaojun:XPopup:2.10.0'
    //Google Ad
    implementation "com.google.android.gms:play-services-ads:23.2.0"
}